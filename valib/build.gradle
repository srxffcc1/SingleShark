apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion 24
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
//        externalNativeBuild {
//            ndkBuild {
//                abiFilters  "armeabi-v7a"
//            }
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    externalNativeBuild {
//        ndkBuild {
//            path file("src/main/jni/Android.mk")
//        }
//    }
    lintOptions {
        //IJobService need NewApi
        warning 'NewApi','OnClick'
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //    compile 'net.lingala.zip4j:zip4j:1.3.2'
    compile files('src/main/libs/android-art-interpret-3.0.0.jar')
    compile files('src/main/libs/dalvik_hack-3.0.0.5.jar')
}
publish {
    userOrg = 'srxffcc1'//bintray网的用户id
    groupId = 'com.srxlike.virtuallib'//自己定义一个唯一的java的包名
    artifactId = 'virtuallib'//在bintray上的package名字
    publishVersion = '1.0.0'//版本号
    desc = 'just upload this and ?'//描述，不重要
    website = 'https://github.com/srxffcc1/un7zip'//网站，不重要；尽量模拟github上的地址，例如我这样的；当然你有地址最好了
    licences = ['Apache-2.0']//协议
}
tasks.withType(Javadoc) { //防止doc错误
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
